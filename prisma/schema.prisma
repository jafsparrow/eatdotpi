// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//  "mongodb+srv://jafar:12345@cluster0.y7xyc.mongodb.net/eatdotpi?retryWrites=true"

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMmRkMmRiY2QtZTQ0MS00MTE0LWFkYmQtOTg5ZDAxOWM4MGRiIiwidGVuYW50X2lkIjoiNDdjM2YxYjUxMWM0NmI3NzIyNTEwYjg3OTYzMTJjZjRkMDFjMGJiMDM3OTYyZjk5ZTM3OWRkOWRkZWM3OTY4NSIsImludGVybmFsX3NlY3JldCI6IjczN2Y5ODFkLTI0Y2QtNDIwMS04MDIwLWE4NjE4M2RiNzcyMyJ9.99YdspIQfehfg7bF0TCJLQXwVuZsHT8SVvQ-4b_hlN4"
}

model Organisation {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  currencyCode String
  Products     Product[]
  Orders       Order[]
  Category     Category[]
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  phone    String
  username String
  password String
}

// model Customer {
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   name  String
//   phone String
// }
model Category {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String       @default("Delicious and Tasty")
  products     Product[]
  orgId        String       @db.ObjectId
  organisation Organisation @relation(fields: [orgId], references: [id])
  sortIndex    Int          @default(1)
}

type Product {
  name                  String
  secondaryLanguageName String?
  description           String
  price                 Float
  image                 ProductImage[]
  inStock               Boolean         @default(true)
  videoUrl              String?
  popular               Boolean         @default(false)
  printName             String?
  modifierGroups        ModifierGroup[]
  indexInCategory       Int
  code                  Int             @default(1)
  createdAt             DateTime        @default(now())
}

type ProductImage {
  storageName String
  downloadUrl String
}

// model Product {
//   id           String       @id @default(auto()) @map("_id") @db.ObjectId
//   code         String       @unique
//   name         String
//   price        Int
//   orgId        String       @db.ObjectId
//   organisation Organisation @relation(fields: [orgId], references: [id])
//   modifiers    Modifier[]
//   Category     Category?    @relation(fields: [categoryId], references: [id])
//   categoryId   String?      @db.ObjectId
// }

model Order {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime      @default(now())
  customer     Customer
  cartItems    CartItem[]
  amount       Int
  status       Status
  orgId        String        @db.ObjectId
  Organisation Organisation? @relation(fields: [orgId], references: [id])
}

type CartItem {
  name      String
  amount    Int
  count     Int
  modifiers String[]
}

type ModifierGroup {
  description      String
  shouldBeSelected Boolean
  items            Modifier[]
}

type Modifier {
  title     String
  price     Float
  isDefault Boolean
}

type Customer {
  name    String
  phone   String
  address String
}

enum Status {
  NEW
  DONE
}
